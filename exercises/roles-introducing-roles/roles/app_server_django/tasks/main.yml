---
- name: Ensure latest version of Pip is installed
  pip:
    name: 'pip'
    virtualenv: "{{ django_virtualenv_dir }}"
  become: yes
  become_user: "{{ django_user }}"

# Normally, we would pull the Django version number from the code base (repo)
# that we are using to install. We are avoiding that complexity for this
# exercise.
- name: Install Django Software
  pip:
    name: 'django<2.2'
    virtualenv: "{{ django_virtualenv_dir }}"
  become: yes
  become_user: "{{ django_user }}"

- name: Ensure app_server directory exists
  file:
    path: "{{ django_app_path }}"
    state: directory
    mode: 0755
    owner: "{{ django_group }}"
    group: "{{ django_group }}"
  become: yes

# Normally, we would pull latest app source from the code base (repo) that we
# are using to install. We are avoiding that complexity for this exercise.
#
# Note: This demo app isn't really production level security. The example has
# embedded SECRET_KEY for example. This has been simplified for instruction
- name: Upload the example django app
  unarchive:
    src: example_django_app.tar
    dest: "{{ django_app_path }}"
    owner: "{{ django_group }}"
    group: "{{ django_group }}"
  become: yes

- name: Collect the Django static files into Nginx directory
  django_manage:
    command: collectstatic
    app_path: "{{ django_app_path }}"
    virtualenv: "{{ django_virtualenv_dir }}"
    settings: walking_skeleton.settings.production
  become: yes
  become_user: "{{ django_group }}"

# There shouldn't be any significant migrations. However, this is included for
# both compeleteness and to demonstrate another Django command
#
# Note: This demo app isn't really production level security. The example has
# embedded SECRET_KEY for example. This has been simplified for instruction
- name: Migrate database
  django_manage:
    command: migrate
    app_path: "{{ django_app_path }}"
    virtualenv: "{{ django_virtualenv_dir }}"
    settings: walking_skeleton.settings.production
  become: yes
  become_user: "{{ django_group }}"

